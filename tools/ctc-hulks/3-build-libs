#!/bin/bash

source env.sh
source versions

# Get base directory for better referencing
base_dir=`cd $(dirname $0); pwd -P`

lib_dir="${base_dir}/libs"
destdir="${lib_dir}/sysroot/"
gcc_version=`${base_dir}/x-tools/i686-nao-linux-gnu/bin/i686-nao-linux-gnu-gcc -dumpversion`
prefix="/home/nao/sysroot-${gcc_version}-${TOOLCHAIN_SUB_VERSION}/usr"

cd libs

#Build bzip2
cd $bzip2_dir
make CC="i686-nao-linux-gnu-gcc" AR="i686-nao-linux-gnu-ar" RANLIB="i686-nao-linux-gnu-ranlib" libbz2.a
install -D -m 644 libbz2.a ${destdir}${prefix}/lib/libbz2.a
install -D -m 644 bzlib.h ${destdir}${prefix}/include/bzlib.h
make clean
make -f Makefile-libbz2_so CC="i686-nao-linux-gnu-gcc" all
install -D -m 755 libbz2.so.1.0.6 ${destdir}${prefix}/lib/libbz2.so.1.0.6
ln -sf libbz2.so.1.0.6 ${destdir}${prefix}/lib/libbz2.so.1.0
cd ..
continue_install "Finished bzip2."

#Build zlib
cd $zlib_dir
CC=i686-nao-linux-gnu-gcc AR=i686-nao-linux-gnu-ar RANLIB=i686-nao-linux-gnu-ranlib ./configure --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished zlib."

#Build libpng
cd $libpng_dir
./configure --host=i686-nao-linux-gnu \
  CC=i686-nao-linux-gnu-gcc AR=i686-nao-linux-gnu-ar STRIP=i686-nao-linux-gnu-strip RANLIB=i686-nao-linux-gnu-ranlib \
  CPPFLAGS="-I${destdir}${prefix}/include -O2 -march=atom -mssse3 -mfpmath=sse -fomit-frame-pointer" \
  LDFLAGS="-L${destdir}${prefix}/lib" --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished libpng."

#Build libjpeg
cd $libjpeg_dir
autoreconf -fiv
./configure --host=i686-nao-linux-gnu --with-jpeg8 \
  CC=i686-nao-linux-gnu-gcc AR=i686-nao-linux-gnu-ar STRIP=i686-nao-linux-gnu-strip RANLIB=i686-nao-linux-gnu-ranlib \
  CPPFLAGS="-I${destdir}${prefix}/include -O2 -march=atom -mssse3 -mfpmath=sse -fomit-frame-pointer" \
  LDFLAGS="-L${destdir}${prefix}/lib" --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished libjpeg."

#Build Boost.Build
cd ${boost_dir}/tools/build
patch -N -p1 < ${base_dir}/patches/boost/1.64.0/boost-build.patch
./bootstrap.sh
./b2 --prefix=${lib_dir}/boost-build --ignore-site-config
#Build and install Boost
cd ../..
echo "using gcc : i686 : i686-nao-linux-gnu-g++ : <compileflags>-O2 <compileflags>-march=atom <compileflags>-mssse3 <compileflags>-mfpmath=sse <compileflags>-fomit-frame-pointer <compileflags>-std=c++14 ;" > ~/user-config.jam
${lib_dir}/boost-build/bin/b2 --toolchain=gcc-i686 --ignore-site-config --without-python --prefix=${destdir}${prefix} \
  -s BZIP2_BINARY=bz2 -s BZIP2_INCLUDE=${destdir}${prefix}/include -s BZIP2_LIBPATH=${destdir}${prefix}/lib \
  -s ZLIB_BINARY=z -s ZLIB_INCLUDE=${destdir}${prefix}/include -s ZLIB_LIBPATH=${destdir}${prefix}/lib install
cd ..
continue_install "Finished boost."

mkdir flann_build
cd flann_build
cmake -DCMAKE_TOOLCHAIN_FILE=../../i686-nao-linux-gnu.toolchain.cmake \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=${prefix} \
  -DBUILD_MATLAB_BINDINGS=OFF -DBUILD_PYTHON_BINDINGS=OFF \
  -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF \
  -DBUILD_DOC=OFF \
  -DUSE_MPI=OFF -DUSE_OPENMP=OFF \
  ../flann-${flann_version}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished flann."

cd ${eigen_dir}
patch -p1 < ${base_dir}/patches/eigen3/3.3.4/fixCuda.patch
cd ..
mkdir eigen_build
cd eigen_build
cmake -DCMAKE_TOOLCHAIN_FILE=../../i686-nao-linux-gnu.toolchain.cmake \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=${prefix} \
  -DEIGEN_BUILD_PKGCONFIG=OFF \
  -DEIGEN_TEST_CUDA=OFF \
  -DBUILD_TESTING=ON \
  -DEIGEN_TEST_CXX11=ON \
  ../${eigen_dir}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished Eigen."

cd $alsa_lib_dir
./configure --host=i686-nao-linux-gnu --disable-python \
  CC=i686-nao-linux-gnu-gcc AR=i686-nao-linux-gnu-ar STRIP=i686-nao-linux-gnu-strip RANLIB=i686-nao-linux-gnu-ranlib \
  CPPFLAGS="-O2 -march=atom -mssse3 -mfpmath=sse -fomit-frame-pointer" \
  --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished alsa."

mkdir portaudio_build
cd portaudio_build
cmake -DCMAKE_TOOLCHAIN_FILE=../../i686-nao-linux-gnu.toolchain.cmake \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=${prefix} \
  -DALSA_INCLUDE_DIR=${destdir}${prefix}/include \
  -DALSA_LIBRARY=${destdir}${prefix}/lib/libasound.so \
  -DPA_USE_JACK=OFF \
  ../${portaudio_dir}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished portaudio."

cd $sndfile_dir
./configure --host=i686-nao-linux-gnu \
  CC=i686-nao-linux-gnu-gcc AR=i686-nao-linux-gnu-ar STRIP=i686-nao-linux-gnu-strip RANLIB=i686-nao-linux-gnu-ranlib \
  CPPFLAGS="-O2 -march=atom -mssse3 -mfpmath=sse -fomit-frame-pointer" \
  --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished libsndfile."

cd $fftw_dir
./configure --host=i686-nao-linux-gnu \
  CC=i686-nao-linux-gnu-gcc CXX=i686-nao-linux-gnu-g++ AR=i686-nao-linux-gnu-ar STRIP=i686-nao-linux-gnu-strip RANLIB=i686-nao-linux-gnu-ranlib \
  CFLAGS="-O2 -march=atom -mssse3 -mfpmath=sse -fomit-frame-pointer" \
  --prefix=${prefix}
make
make DESTDIR=${destdir} install
cd ..
continue_install "Finished fftw."
