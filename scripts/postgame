#!/bin/bash

# Get base directory for better referencing
BASEDIR=`cd $(dirname $0); pwd -P`
BASEDIR=${BASEDIR%/*}

source "${BASEDIR}/scripts/lib/msg.sh"
source "${BASEDIR}/scripts/lib/naonet.sh"
source "${BASEDIR}/scripts/lib/numberToIP.sh"
source "${BASEDIR}/scripts/lib/docker.sh"

function helpMenu {
  echo "Usage: $0 [OPTIONS] NAO..."
  echo ""
  echo "Options"
  echo " -l, --logdir LOGDIR               the directory to which the logs from the NAO are downloaded"
  echo " -n, --network NETWORK             the network to which the robots should be set (e.g. ETH or SPL_A)"
  echo " -h, --help                        show this help"
  echo ""
  echo "Nao"
  echo " either hostname, IP or number of the NAO"
}

function run {
  # a list of NAOs that are prepared
  NAOS=()
  # default network is ethernet
  NETWORK=ETH
  # empty logdir means that no logs are downloaded
  LOGDIR=""
  # prepare parameters
  PARAMETERS=""
  while [ "$#" -gt 0 ]; do
    if [[ $1 =~ ^- ]] && [[ ! $1 =~ ^-- ]]; then
      PARAMETERS+=$(echo "${1:1}" | sed -e "s/\(.\)/ -\1/g")
    else
      PARAMETERS+=" $1"
    fi
    shift
  done
  eval set -- "${PARAMETERS}";

  while [[ "$1" =~ ^- ]]; do
    case "$1" in
      "-l" | "--logdir")
        shift
        if [ "$#" -eq 0 ]; then
          msg -e "--logdir needs a directory as parameter!"
          helpMenu
          return 1
        fi
        # If you really need to use the --logdir option, you can comment the following 4 lines.
        # You have to use a name that is valid inside the container, though, such as
        # --logdir /nao/logs/Game3
        if iAmInDocker; then
          msg -e "Sorry, but the --logdir option is not yet available in docker!"
          return 1
        fi
        LOGDIR="$1"
        ;;
      "-n" | "--network")
        shift
        if [ "$#" -eq 0 ]; then
          msg -e "--network needs a network as parameter!"
          helpMenu
          return 1
        fi
        NETWORK="$1"
        ;;
      "-h" | "--help")
        helpMenu
        return 0
        ;;
      *)
        msg -e "Failed to parse \"$1\"!"
        helpMenu
        return 1
        ;;
    esac
    shift
  done

  if [ "$#" -lt 1 ]; then
    helpMenu
    return 1
  fi

  NAOS=()
  while [ "$#" -gt 0 ]; do
    NAOS+=($(numberToIP "$1"))
    shift
  done

  ERROR=0
  for NAO in ${NAOS[@]}; do
    msg -n "Stopping ${NAO}."
    naocmd "${BASEDIR}" "${NAO}" "sudo /etc/init.d/hulk stop; /home/nao/bin/setNetwork ${NETWORK}; exit 0"
    if [ "$?" -ne 0 ]; then
      msg -e "Failed to stop the hulk service on ${NAO}!"
      if [ ! "${LOGDIR}" == "" ]; then
        msg -e "No logs were downloaded from ${NAO} because the hulk service could not be stopped!"
      fi
      ERROR=1
      continue
    fi
    if [ ! "${LOGDIR}" == "" ]; then
      msg -n "Downloading logs from ${NAO} to ${LOGDIR}/${NAO}."
      mkdir -p "${LOGDIR}/${NAO}"
      naocp "${BASEDIR}" "nao@${NAO}:naoqi/filetransport_*" "${LOGDIR}/${NAO}"
      if [ "$?" -ne 0 ]; then
        msg -e "Failed to download logs in home folder from ${NAO}!"
        ERROR=1
        continue
      fi
      naocp "${BASEDIR}" "nao@${NAO}:/mnt/usb/filetransport_*" "${LOGDIR}/${NAO}"
      if [ "$?" -ne 0 ]; then
        msg -e "Failed to download logs on usb stick from ${NAO}!"
        ERROR=1
        continue
      fi
      msg -n "Deleting logs on ${NAO}."
      naocmd "${BASEDIR}" "${NAO}" "rm -rf /home/nao/naoqi/filetransport_*"
      if [ "$?" -ne 0 ]; then
        msg -e "Failed to remove logs in home folder from ${NAO}!"
      fi
      naocmd "${BASEDIR}" "${NAO}" "rm -rf /mnt/usb/filetransport_*"
      if [ "$?" -ne 0 ]; then
        msg -e "Failed to remove logs on usb stick from ${NAO}!"
      fi
    fi
    msg -s "Finished with ${NAO}!"
  done
  return ${ERROR}
}

handleDocker "${BASEDIR}" "$@"
